'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tag = exports.omit = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styledSystem = require('styled-system');

var _htmlTags = require('html-tags');

var _htmlTags2 = _interopRequireDefault(_htmlTags);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var allPropTypes = Object.keys(_styledSystem.styles).filter(function (key) {
  return typeof _styledSystem.styles[key] === 'function';
}).reduce(function (a, key) {
  return Object.assign(a, _styledSystem.styles[key].propTypes);
}, {});

var omitProps = [].concat(_toConsumableArray(Object.keys(allPropTypes)), ['theme']);

var omit = exports.omit = function omit(obj, keys) {
  var next = {};
  for (var key in obj) {
    if (keys.indexOf(key) > -1) continue;
    next[key] = obj[key];
  }
  return next;
};

var Tag = _react2.default.forwardRef(function (_ref, ref) {
  var _ref$is = _ref.is,
      Tag = _ref$is === undefined ? 'div' : _ref$is,
      _ref$omitProps = _ref.omitProps,
      omitProps = _ref$omitProps === undefined ? [] : _ref$omitProps,
      props = _objectWithoutProperties(_ref, ['is', 'omitProps']);

  return _react2.default.createElement(Tag, _extends({
    ref: ref
  }, omit(props, omitProps)));
});

exports.Tag = Tag;
Tag.displayName = 'Clean.div';

Tag.defaultProps = {
  omitProps: omitProps
};

_htmlTags2.default.forEach(function (tag) {
  Tag[tag] = _react2.default.forwardRef(function (props, ref) {
    return _react2.default.createElement(Tag, _extends({ ref: ref, is: tag }, props));
  });
  Tag[tag].displayName = 'Clean.' + tag;
});

exports.default = Tag;
