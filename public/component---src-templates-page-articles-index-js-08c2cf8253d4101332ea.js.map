{"version":3,"sources":["webpack:///./src/templates/page-articles/section-articles.js","webpack:///./src/templates/page-articles/index.js"],"names":["Articles","_ref","entries","map","entry","react_default","a","createElement","card_article","key","title","Grid","styled","div","withConfig","displayName","componentId","props","theme","padding","medium","columns","media","phone","_templateObject","ArticlesSection","_ref2","className","data","id","section_articles_Articles","articles","edges","e","node","default","color","grey","lightest","section_articles","gatsby_browser_entry","query","render","Object","assign","_2485818524","__webpack_require__","d","__webpack_exports__","page_articles_query","HomePage","layout","meta","page","Meta"],"mappings":"ySAMA,IAAMA,EAAW,SAAAC,GAAA,OAAAA,EAAEC,QAAqBC,IAAI,SAAAC,GAAK,OAC/CC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaC,IAAKL,EAAMM,MAAON,MAAOA,OAGlCO,EAAOC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,YAAGJ,CAAH,kIAGI,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,QAEhC,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,QAAQ,KAGpCC,IAAMC,MARAC,MA0BJC,EAAkBb,YAbQ,SAAAc,GAG1B,IAFJC,EAEID,EAFJC,UACAC,EACIF,EADJE,KAEA,OACEvB,EAAAC,EAAAC,cAAA,WAASsB,GAAG,OAAOF,UAAWA,GAC5BtB,EAAAC,EAAAC,cAACI,EAAD,KACEN,EAAAC,EAAAC,cAACuB,EAAD,CAAU5B,QAAS0B,EAAKG,SAASC,MAAM7B,IAAI,SAAA8B,GAAC,OAAIA,EAAEC,aAMrCpB,WAAA,CAAAC,YAAA,oCAAAC,YAAA,YAAGJ,CAAH,gCACR,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,QAAQgB,SAC1B,SAAAlB,GAAK,OAAIA,EAAMC,MAAMkB,MAAMC,KAAKC,WA8BjCC,EAAA,SAAAtB,GAAK,OAClBZ,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACEC,MA7BO,aA8BPC,OAAQ,SAAAd,GAAI,OAAIvB,EAAAC,EAAAC,cAACkB,EAADkB,OAAAC,OAAA,CAAiBhB,KAAMA,GAAUX,KAFnDW,KAAAiB,KCrEFC,EAAAC,EAAAC,EAAA,0BAAAC,IAkBeC,UAbE,SAAAjD,GAEX,IADJ2B,EACI3B,EADJ2B,KAEA,OACEvB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAQC,KAAM,CAACC,KAAMzB,EAAKyB,OACxBhD,EAAAC,EAAAC,cAAA,OAAKsB,GAAG,QACNxB,EAAAC,EAAAC,cAAC+C,KAAD,CAAMD,KAAMzB,EAAKyB,OACjBhD,EAAAC,EAAAC,cAACgC,EAAD,SAPR,IAeaE,EAAK","file":"component---src-templates-page-articles-index-js-08c2cf8253d4101332ea.js","sourcesContent":["import styled from 'styled-components'\nimport React from 'react'\nimport ArticleCard from 'components/card-article'\nimport {graphql,StaticQuery} from 'gatsby'\nimport media from 'components/theme/media'\n\nconst Articles = ({entries}) => entries.map(entry => (\n  <ArticleCard key={entry.title} entry={entry}/>\n))\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit,minmax(35rem,1fr));\n  grid-gap: ${props => props.theme.padding.medium};\n  margin: 0 auto;\n  width: ${props => props.theme.columns(12)};\n  max-width: 100%;\n\n  ${media.phone`\n    display: block;\n  `}\n`\n\nconst UnstyledArticlesSection = ({\n  className,\n  data\n}) => {\n  return (\n    <section id='blog' className={className}>\n      <Grid>\n        <Articles entries={data.articles.edges.map(e => e.node)}/>\n      </Grid>\n    </section>\n  )\n}\n\nconst ArticlesSection = styled(UnstyledArticlesSection)`\n  padding: ${props => props.theme.padding.default};\n  background: ${props => props.theme.color.grey.lightest};\n`\n\nconst query = graphql`\n  {\n    articles: allContentfulArticle(\n      limit: 12,\n      sort: {\n        fields: [publishDate],\n        order: DESC\n      }\n    ) {\n      edges {\n        node {\n          __typename\n          id\n          slug\n          title\n          summary {\n            text: summary\n          }\n          coverImage {\n            ...mediumFluidImage\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={query}\n    render={data => <ArticlesSection data={data} {...props}/>}\n  />\n)","import React from 'react'\nimport Layout from 'components/layout'\nimport ArticlesSection from './section-articles'\nimport {graphql} from 'gatsby'\n\nconst HomePage = ({\n  data\n}) => {\n  return (\n    <Layout meta={{page: data.page}}>\n      <div id='main'>\n        <Meta page={data.page}/>\n        <ArticlesSection/>\n      </div>\n    </Layout>\n  )\n}\n\nexport default HomePage\n\nexport const query = graphql`\n  {\n    page: contentfulPage(slug: {eq: \"articles\"}) {\n      id\n      title\n      slug\n      coverImage {\n        ...heroImage\n      }\n      meta {\n        title\n        description {\n          description\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}